# NOT every command would run in your bash or your system or workflow
# THE git and docker part should be interessting for most of you

# include this file in your .bashrc, .bash_profile or any other bash configuration file

###############################################################################################
# start directory, when opening a shell
cd ~/src/

################################################################################################
# Always list directory contents upon 'cd'
cd() { builtin cd "$@"; ls -alF; }

# Go back directories (for fast typers)
alias cd..='cd ../'
alias ..='cd ../'
alias ...='cd ../../'
alias ....='cd ../../../'
alias .....='cd ../../../../'

# listing
alias ll="ls -alF"

# listing human readable
alias lh="ls -alFh"

# full recursive directory listing
alias lr='ls -R | grep ":$" | sed -e '\''s/:$//'\'' -e '\''s/[^-][^\/]*\//--/g'\'' -e '\''s/^/   /'\'' -e '\''s/-/|/'\'' | less'

# create a ZIP archive of a folder
zipf () { zip -r "$1".zip "$1" ; }

# extract:  Extract most know archives with one command
extract () {
    if [ -f $1 ] ; then
        case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xzf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
            esac
        else
            echo "'$1' is not a valid file"
        fi
}

# Quickly search for file
alias qfind="find . -name "

# Find file under the current directory
ff () { /usr/bin/find . -name "$@" ; }

# Find file whose name starts with a given string
ffs () { /usr/bin/find . -name "$@"'*' ; }

# Find file whose name ends with a given string
ffe () { /usr/bin/find . -name '*'"$@" ; }

# PROCESS MANAGEMENT

#   findPid: find out the pid of a specified process
#   -----------------------------------------------------
#       Note that the command name can be specified via a regex
#       E.g. findPid '/d$/' finds pids of all processes with names ending in 'd'
#       Without the 'sudo' it will only find processes of the current user
#   -----------------------------------------------------
    findPid () { lsof -t -c "$@" ; }

#   memHogsTop, memHogsPs:  Find memory hogs
#   -----------------------------------------------------
    alias memHogsTop='top -l 1 -o rsize | head -20'
    alias memHogsPs='ps wwaxm -o pid,stat,vsize,rss,time,command | head -10'

#   cpuHogs:  Find CPU hogs
#   -----------------------------------------------------
    alias cpu_hogs='ps wwaxr -o pid,stat,%cpu,time,command | head -10'

#   topForever:  Continual 'top' listing (every 10 seconds)
#   -----------------------------------------------------
    alias topForever='top -l 9999999 -s 10 -o cpu'

#   ttop:  Recommended 'top' invocation to minimize resources
#   ------------------------------------------------------------
#       Taken from this macosxhints article
#       http://www.macosxhints.com/article.php?story=20060816123853639
#   ------------------------------------------------------------
    alias ttop="top -R -F -s 10 -o rsize"

#   my_ps: List processes owned by my user:
#   ------------------------------------------------------------
    my_ps() { ps $@ -u $USER -o pid,%cpu,%mem,start,time,bsdtime,command ; }

###############################################################################################
# MAC specific settings

# terminal settings
#defaults write NSGlobalDomain NSAutomaticWindowAnimationsEnabled -bool false
#defaults write com.apple.mail DisableReplyAnimations -bool true
#defaults write com.apple.mail DisableSendAnimations -bool true
#defaults write NSGlobalDomain NSWindowResizeTime -float 0.001
#defaults write -g QLPanelAnimationDuration -float 0
#defaults write com.apple.finder DisableAllAnimations -bool true
#defaults write com.apple.dock expose-animation-duration -float 0.1
#defaults write com.apple.Dock autohide-delay -float 0

###############################################################################################
# npm local
export NODE_OPTIONS=--max-old-space-size=4096

# global npm-packages path
# the following is from https://github.com/sindresorhus/guides/blob/master/npm-global-without-sudo.md
#npm config set prefix "${HOME}/.npm-global"
NPM_PACKAGES="${HOME}/.npm-global"
export PATH="$PATH:$NPM_PACKAGES/bin"
# Preserve MANPATH if you already defined it somewhere in your config.
# Otherwise, fall back to `manpath` so we can inherit from `/etc/manpath`.
export MANPATH="${MANPATH-$(manpath)}:$NPM_PACKAGES/share/man"

###############################################################################################
# history
alias h-g="history | grep "
alias delete-zsh-history="rm $HISTFILE"

###############################################################################################
# visual studio code (code)
#export path="$path:/applications/visual studio code.app/contents/resources/app/bin"
